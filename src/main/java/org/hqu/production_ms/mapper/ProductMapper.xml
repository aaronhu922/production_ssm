<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hqu.production_ms.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.Product" >
    <id column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_type" jdbcType="VARCHAR" property="productType" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  
  <!-- 扩展的sql -->
  <!-- 批量删除 -->
	<delete id="deleteBatch">
		DELETE
		FROM
			product
		WHERE
			product_id IN
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
	<!-- 修改状态，批量启用停用-->
	<update id="changeStatus">
		UPDATE product
		SET status = #{status}
		WHERE
			product_id IN
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	
	<!-- 修改备注-->
	<update id="updateNote" parameterType="org.hqu.production_ms.domain.Product" >
		UPDATE product
		SET note = #{note}
		WHERE
			product_id = #{productId,jdbcType=VARCHAR}
	</update>
	
	<select id="searchProductByProductId" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			product
		WHERE
			product_id LIKE CONCAT(
				'%',
				#{productId},'%' ) 
	</select>
	
		
	<select id="getProductByProductName" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			product
		WHERE
			product_name = #{productName}
	</select>
	
	
	<select id="searchProductByProductName" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			product
		WHERE
			product_name LIKE CONCAT(
				'%',
				#{productName},'%' ) 
	</select>
	
	<select id="searchProductByProductType" parameterType="string" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			product
		WHERE
			product_type LIKE CONCAT(
				'%',
				#{productType},'%' ) 
	</select>
	
	
 <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_name, product_type, unit_price, unit, image, note, status
  </sql>
  <select id="selectByExample" parameterType="org.hqu.production_ms.domain.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where product_id = #{productId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hqu.production_ms.domain.Product">
    insert into product (product_id, product_name, product_type, 
      unit_price, unit, image, 
      note, status)
    values (#{productId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, 
      #{unitPrice,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.hqu.production_ms.domain.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hqu.production_ms.domain.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null">
        product_type = #{record.productType,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set product_id = #{record.productId,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=VARCHAR},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      unit = #{record.unit,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.Product">
    update product
    <set>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.Product">
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      unit = #{unit,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=VARCHAR}
  </update>
</mapper>