<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hqu.production_ms.mapper.OrderItemMapper">
	<resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.OrderItem">
		<id column="uid" jdbcType="BIGINT" property="uid" />
		<result column="order_id" jdbcType="VARCHAR" property="orderId" />
		<result column="product_id" jdbcType="VARCHAR" property="productId" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="quantity" jdbcType="INTEGER" property="quantity" />
		<result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
	</resultMap>		
 		
	<select id="selectByByOrderId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_item
		where order_id = #{orderId,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByOrderId" parameterType="java.lang.String">
		delete from
		order_item
		where order_id = #{orderId,jdbcType=VARCHAR}
	</delete>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		uid, order_id, product_id, unit, quantity, unit_price
	</sql>
	<select id="selectByExample" parameterType="org.hqu.production_ms.domain.OrderItemExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_item
		where uid = #{uid,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		order_item
		where uid = #{uid,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.OrderItemExample">
		delete from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.hqu.production_ms.domain.OrderItem">
		insert into order_item (uid,
		order_id, product_id,
		unit, quantity, unit_price
		)
		values
		(#{uid,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR},
		#{productId,jdbcType=VARCHAR},
		#{unit,jdbcType=VARCHAR},
		#{quantity,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.hqu.production_ms.domain.OrderItem">
		insert into order_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="quantity != null">
				quantity,
			</if>
			<if test="unitPrice != null">
				unit_price,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=BIGINT},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=INTEGER},
			</if>
			<if test="unitPrice != null">
				#{unitPrice,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.hqu.production_ms.domain.OrderItemExample"
		resultType="java.lang.Long">
		select count(*) from order_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update order_item
		<set>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=BIGINT},
			</if>
			<if test="record.orderId != null">
				order_id = #{record.orderId,jdbcType=VARCHAR},
			</if>
			<if test="record.productId != null">
				product_id = #{record.productId,jdbcType=VARCHAR},
			</if>
			<if test="record.unit != null">
				unit = #{record.unit,jdbcType=VARCHAR},
			</if>
			<if test="record.quantity != null">
				quantity = #{record.quantity,jdbcType=INTEGER},
			</if>
			<if test="record.unitPrice != null">
				unit_price = #{record.unitPrice,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update order_item
		set uid = #{record.uid,jdbcType=BIGINT},
		order_id =
		#{record.orderId,jdbcType=VARCHAR},
		product_id =
		#{record.productId,jdbcType=VARCHAR},
		unit =
		#{record.unit,jdbcType=VARCHAR},
		quantity =
		#{record.quantity,jdbcType=INTEGER},
		unit_price =
		#{record.unitPrice,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.OrderItem">
		update order_item
		<set>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				product_id = #{productId,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="quantity != null">
				quantity = #{quantity,jdbcType=INTEGER},
			</if>
			<if test="unitPrice != null">
				unit_price = #{unitPrice,jdbcType=DECIMAL},
			</if>
		</set>
		where uid = #{uid,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.OrderItem">
		update order_item
		set order_id = #{orderId,jdbcType=VARCHAR},
		product_id =
		#{productId,jdbcType=VARCHAR},
		unit = #{unit,jdbcType=VARCHAR},
		quantity = #{quantity,jdbcType=INTEGER},
		unit_price =
		#{unitPrice,jdbcType=DECIMAL}
		where uid = #{uid,jdbcType=BIGINT}
	</update>
</mapper>